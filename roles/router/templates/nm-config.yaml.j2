kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ ansible_operator_meta.name }}-nm-config"
  namespace: "{{ ansible_operator_meta.namespace }}"
data:
  nm-config.sh: |
    set -e
    set -x
    # Delete all existing connections
    nmcli -t -f name connection show | while read name;do \
    if [[ $name == r9s* ]]; then \
      nmcli connection delete "$name"; \
    fi; done

    # gdbus call --system --dest org.freedesktop.systemd1 --object-path /org/freedesktop/systemd1 --method org.freedesktop.systemd1.Manager.RestartUnit NetworkManager.service replace

{% for inside in interfaces.inside %}
    nmcli connection add con-name r9s-inside-{{ inside.name }} type {{ inside.type }} ifname {{ inside.name }} \
      ipv4.method {{ inside.ipv4.method }} {% if inside.ipv4.address is defined %}ipv4.addresses {{ inside.ipv4.address }}{% endif %} ipv6.method ignore connection.zone r9s-internal
{% for item in inside.members | default([]) %}
    nmcli connection add con-name r9s-inside-bridge-{{ item }} type ethernet slave-type bridge ifname {{ item }} master {{ inside.name }}
{% endfor %}
    nmcli connection up r9s-inside-{{ inside.name }}
{% endfor %}

{% for outside in interfaces.outside %}
    nmcli connection add con-name r9s-outside-{{ outside.name }} type {{ outside.type }} ifname {{ outside.name }} \
      ipv4.method {{ outside.ipv4.method }} {% if outside.ipv4.address is defined %}ipv4.addresses {{ outside.ipv4.address }}{% endif %} ipv6.method ignore connection.zone r9s-external
{% for item in outside.members | default([]) %}
    nmcli connection add con-name r9s-outside-bridge-{{ item }} type ethernet slave-type bridge ifname {{ item }} master {{ outside.name }}
{% endfor %}
    nmcli connection up r9s-outside-{{ outside.name }}
{% endfor %}
