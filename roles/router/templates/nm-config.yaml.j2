kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ ansible_operator_meta.name }}-nm-config"
  namespace: "{{ ansible_operator_meta.namespace }}"
data:
  nm-config.sh: |
    set -e
    set -x
    # Delete all existing connections
    nmcli -t -f name connection show | while read name;do \
    if [[ $name == r9s* ]]; then \
      nmcli connection delete "$name"; \
    fi; done

    # gdbus call --system --dest org.freedesktop.systemd1 --object-path /org/freedesktop/systemd1 --method org.freedesktop.systemd1.Manager.RestartUnit NetworkManager.service replace

{% for interface in interfaces %}
    nmcli connection add con-name r9s-interface-{{ interface.name }} type {{ interface.type }} ifname {{ interface.name }} \
      ipv4.method {{ interface.ipv4.method }} {% if interface.ipv4.address is defined %}ipv4.addresses {{ interface.ipv4.address }}{% endif %} ipv6.method ignore {% if interface.zone is defined and interface.zone == "outside" %} connection.zone r9s-external{% endif %}
{% for item in interface.members | default([]) %}
    nmcli connection add con-name r9s-interface-bridge-{{ item }} type ethernet slave-type bridge ifname {{ item }} master {{ interface.name }}
{% endfor %}
    nmcli connection up r9s-interface-{{ interface.name }}
{% endfor %}
