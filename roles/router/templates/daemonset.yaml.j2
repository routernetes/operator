kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: "{{ ansible_operator_meta.name }}-r9s-daemonset"
  namespace: "{{ ansible_operator_meta.namespace }}"
  labels:
    app: r9s
spec:
  selector:
    matchLabels:
      app: r9s
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/network-setup: unconfined
      labels:
        app: r9s
    spec:
{% if node_selector_labels is defined %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
{% for key, value in node_selector_labels.items() %}
                - key: "{{ key }}"
                  operator: In
                  values:
                    - "{{ value }}"
{% endfor %}
{% endif %}
      serviceAccountName: routernetes
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
        - name: network-setup
          image: "{{ lookup('env', 'RELATED_IMAGE_ROUTERNETES') }}"
          command: ["/bin/bash"]
          args: ["/nm-config.sh"]
          volumeMounts:
            - mountPath: /run/dbus/system_bus_socket
              name: dbus-socket
            - name: nm-config
              mountPath: /nm-config.sh
              subPath: nm-config.sh
{% if has_zincati %}
        - name: zincati-setup
          image: "{{ lookup('env', 'RELATED_IMAGE_ROUTERNETES') }}"
          command: ["/bin/bash", "-c"]
          args:
            - set -e;
              set -x;
              cat /configs/55-updates-strategy.toml > /host-config.toml;
              gdbus call --system --dest org.freedesktop.systemd1 --object-path /org/freedesktop/systemd1 --method org.freedesktop.systemd1.Manager.RestartUnit zincati.service replace;
          volumeMounts:
            - mountPath: /run/dbus/system_bus_socket
              name: dbus-socket
            - name: zincati-config
              mountPath: /configs
            - name: zincati-host
              mountPath: /host-config.toml
{% endif %}
      containers:
{% if not is_openshift %}
        - name: tuned
          image: "{{ lookup('env', 'RELATED_IMAGE_ROUTERNETES') }}"
          command: ["tuned"]
          args: ["-p", "network-throughput"]
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /run/dbus/system_bus_socket
              name: dbus-socket
{% endif %}
        - name: firewalld
          image: "{{ lookup('env', 'RELATED_IMAGE_ROUTERNETES') }}"
          command: ["firewalld"]
          args: ["--nofork", "--nopid", "--debug"]
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /run/dbus/system_bus_socket
              name: dbus-socket
            - name: firewalld-config
              mountPath: /etc/firewalld/zones/r9s-external.xml
              subPath: r9s-external.xml
            - name: firewalld-config
              mountPath: /etc/firewalld/zones/r9s-internal.xml
              subPath: r9s-internal.xml
            - name: firewalld-config
              mountPath: /etc/firewalld/firewalld.conf
              subPath: firewalld.conf
        - name: dnsmasq
          image: "{{ lookup('env', 'RELATED_IMAGE_ROUTERNETES') }}"
          command: ["dnsmasq"]
          args: ["-k", "-h", "-R", "-l", "/leases/db", "--log-facility=-"]
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
          ports:
            - name: dns-port
              containerPort: 53
              hostPort: 53
              protocol: UDP
            - name: dhcp-port
              containerPort: 67
              hostPort: 67
              protocol: UDP
          volumeMounts:
            - name: dnsmasq-config
              mountPath: /etc/dnsmasq.conf
              subPath: dnsmasq.conf
            - name: dhcp-lease
              mountPath: /leases
      volumes:
        - name: dhcp-lease
          persistentVolumeClaim:
            claimName: "{{ ansible_operator_meta.name }}-dhcp-lease-pvc"
        - name: dbus-socket
          hostPath:
            path: /run/dbus/system_bus_socket
            type: Socket
{% if has_zincati %}
        - name: zincati-host
          hostPath:
            path: /etc/zincati/config.d/55-updates-strategy.toml
            type: FileOrCreate
        - name: zincati-config
          configMap:
            name: "{{ ansible_operator_meta.name }}-zincati-config"
{% endif %}
        - name: dnsmasq-config
          configMap:
            name: "{{ ansible_operator_meta.name }}-dnsmasq-config"
        - name: firewalld-config
          configMap:
            name: "{{ ansible_operator_meta.name }}-firewalld-config"
        - name: nm-config
          configMap:
            name: "{{ ansible_operator_meta.name }}-nm-config"
            defaultMode: 0777
